
program ===> $, 
otherFunctions ===> TK_MAIN, 
mainFunction ===> $, 
function ===> TK_FUNID, TK_MAIN, 
input_par ===> TK_OUTPUT, TK_SEM, 
output_par ===> TK_SEM, 
parameter_list ===> TK_SQR, 
dataType ===> TK_ID, TK_COLON, 
primitiveDataType ===> TK_ID, TK_COLON, 
constructedDataType ===> TK_ID, TK_COLON, 
remaining_list ===> TK_SQR, 
stmts ===> TK_END, 
typeDefinitions ===> TK_TYPE, TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, 
actualOrRedefined ===> TK_RECORD, TK_UNION, TK_DEFINETYPE, TK_TYPE, TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, 
typeDefinition ===> TK_RECORD, TK_UNION, TK_DEFINETYPE, TK_TYPE, TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, 
fieldDefinitions ===> TK_ENDRECORD, TK_ENDUNION, 
fieldDefinition ===> TK_TYPE, TK_ENDRECORD, TK_ENDUNION, 
fieldType ===> TK_COLON, 
moreFields ===> TK_ENDRECORD, TK_ENDUNION, 
declarations ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, 
declaration ===> TK_TYPE, TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, 
global_or_not ===> TK_SEM, 
otherStmts ===> TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
stmt ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
assignmentStmt ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
SingleOrRecId ===> TK_ASSIGNOP, TK_CL, TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_SEM, TK_LT, TK_LE, TK_EQ, TK_GT, TK_GE, TK_NE, 
option_single_constructed ===> TK_ASSIGNOP, TK_CL, TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_SEM, TK_LT, TK_LE, TK_EQ, TK_GT, TK_GE, TK_NE, 
oneExpansion ===> TK_CL, TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_SEM, TK_LT, TK_LE, TK_EQ, TK_GT, TK_GE, TK_NE, TK_DOT, TK_ASSIGNOP, 
moreExpansions ===> TK_ASSIGNOP, TK_CL, TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_SEM, TK_LT, TK_LE, TK_EQ, TK_GT, TK_GE, TK_NE, 
funCallStmt ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
outputParameters ===> TK_CALL, 
inputParameters ===> TK_SEM, 
iterativeStmt ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
conditionalStmt ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
elsePart ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
ioStmt ===> TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, 
arithmeticExpression ===> TK_SEM, TK_CL, 
expPrime ===> TK_SEM, TK_CL, 
term ===> TK_PLUS, TK_MINUS, TK_SEM, TK_CL, 
termPrime ===> TK_PLUS, TK_MINUS, TK_SEM, TK_CL, 
factor ===> TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_SEM, TK_CL, 
lowPrecedenceOp ===> TK_OP, TK_ID, TK_NUM, TK_RNUM, 
highPrecedenceOp ===> TK_OP, TK_ID, TK_NUM, TK_RNUM, 
booleanExpression ===> TK_CL, 
var ===> TK_CL, TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_SEM, TK_LT, TK_LE, TK_EQ, TK_GT, TK_GE, TK_NE, 
logicalOp ===> TK_OP, 
relationalOp ===> TK_ID, TK_NUM, TK_RNUM, 
returnStmt ===> TK_END, 
optionalReturn ===> TK_SEM, 
idList ===> TK_SQR, 
more_ids ===> TK_SQR, 
definetypestmt ===> TK_RECORD, TK_UNION, TK_DEFINETYPE, TK_TYPE, TK_ID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN, 
A ===> TK_RUID, 
